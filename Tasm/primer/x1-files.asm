;─────────── ФАЙЛЫ ────────────────────────────────────────────────────────────
; 1.Создается файл "primer.txt" и в него записываются символы  "abcdefgh"
; 2.Изменяется 5-й байт файла (маленькая буква в заглавную):   "abcdeFgh"
; 3.Содержимое файла печатается на экране (до конца файла)

  .model tiny
  .code
  org 100h
  include _abc.mac
Start: 

;──────────────1.Создание файла и запись в него нескольких символов────────────
                       ;--создать и открыть файл
  mov DX,offset Names       ;адрес имени файла
  call Make                 ;создать файл открытым для записи
    mov AL, 'a'        ;--записать в файл символы от 'a' до 'h'
 Metka11:              
    call Save               ;записать в файл символ из AL
    inc AL                   
      cmp AL, 'h'+1         ;дошли до последнего символа ?
      jnz Metka11           ;если нет, то продолжить цикл
  call Close           ;--закрыть файл

;──────────────2.Изменение байта в файле───────────────────────────────────────
                       ;--открыть файл для изменения
  mov DX,offset Names       ;адрес имени файла
  mov AL, 2                 ;режим=2 -для изменения
  call Open                 ;открыть файл  
                       ;--поставить указатель и прочитать байт из файла в AL
  mov DX, 5                 ;позиция в файле (номер изменяемого байта,счет c 0)
  call Seek                 ;поставить указатель в файле
  call Load                 ;прочитать байт из файла в AL
    sub AL,32          ;--изменить байт (маленькую букву в заглавную)
                       ;--поставить указатель и записать байт из AL в файл
  mov DX, 5                 ;позиция в файле (номер изменяемого байта)
  call Seek                 ;поставить указатель в файле
  call Save                 ;записать в файл из AL
  call Close           ;--закрыть файл      

;──────────────3.Печать содержимого файла──────────────────────────────────────
  CLS                       ;макрос очистки экрана
                       ;--открыть файл для чтения
  mov DX,offset Names       ;адрес имени файла
  mov AL,0                  ;режим=0 -для чтения 
  call Open                 ;открыть файл  
 Metka31:              ;--чтение байтов до конца файла и печать
    call Load               ;чтение из файла в AL
    cmp AL, 0               ;это конец файла ?
    jz Metka32              ;если конец файла, то выход из цикла
      mov AH,0Eh
      int 10h               ;печать символа из AL
    jmp Metka31             ;на продолжение чтения и печати
 Metka32:
  call Close           ;--закрыть файл      
         
  PAUSE                     ;макрос паузы
  STOP                      ;макроы завершения программы

;============== ПЕРЕМЕННЫЕ (обязательные) =====================================

  Names db "primer.txt",0   ;имя файла (заканчивается нулем)
  Bufer db 0                ;буфер (в него читается, из него записывается)
  Nomer dw 0                ;номер текущего файла (помещается при открытии,
                            ; используется при чтении/записи/закрытии/установке

;============== ПОДПРОГРАММЫ для обработки файлов =============================

;──────────────────────────────────────────────────────────────────────────────
 ;== ОТКРЫТИЕ файла              из DX   -адрес имени файла 
 ;                               из AL   -режим  (0 -чт, 1 -зап, 2 -чт/зап)
 ;                               в Nomer -номер файла
Open:
    push AX
    push CX
  mov CX, 0    ;маска -обычный файл
  mov AH, 3Dh
  int 21h
  mov Nomer,AX ;номер файла
    pop CX
    pop AX
  ret

;──────────────────────────────────────────────────────────────────────────────
 ;== СОЗДАНИЕ файла для записи   из DX -адрес имени файла
 ;                               в Nomer -номер файла
Make: 
    push AX
    push CX
  mov CX, 0    ;маска -обычный файл
    mov AH, 3Ch
    int 21h
  mov Nomer,AX ;номер файла
    pop CX
    pop AX
    ret

;──────────────────────────────────────────────────────────────────────────────
 ;== ЗАКРЫТИЕ файла              из Nomer -номер файла
Close:
    push AX
    push BX
  mov BX, Nomer ;номер файла
    mov AH, 3Eh          
    int 21h
  pop BX
  pop AX 
  ret

;──────────────────────────────────────────────────────────────────────────────
 ;== ЧТЕНИЕ одного байта из файла в AL (указатель смещается)
 ;                    из Nomer -номер файла
 ;                    в AL     -байт из файла (если файл закончился, то AL=0 )
Load:
    push BX
    push CX
    push DX  
  mov BX, Nomer             ;номер файла
  mov CX,1                  ;количество читаемых байтов
  mov DX,offset Bufer       ;адрес буфера
    mov AH,3Fh          
    int 21h                 ;если файл закончился, то AX=0
  cmp AX,0
  jz Load1 
    mov AL, Bufer           ;прочитанный из файла байт
Load1:
  pop DX
  pop CX
  pop BX
  ret

;──────────────────────────────────────────────────────────────────────────────
 ;== ЗАПИСЬ одного байта из AL в файл (указатель смещается)
 ;                    из Nomer -номер файла
 ;                    из  AL   -записываемый байт
Save:
  push AX 
  push BX 
  push CX
  push DX  
    mov Bufer, AL           ;запиываемый байт
    mov BX, Nomer           ;номер файла
    mov CX,1                ;количество записываемых байтов
    mov DX,offset Bufer     ;адрес буфера 
      mov AH,40h          
      int 21h                 
  pop DX
  pop CX
  pop BX
  pop AX
  ret

;──────────────────────────────────────────────────────────────────────────────
 ;== УСТАНОВКА указателя в файле на байт с номером из DX (файлы до 64 Кбайт)
 ;                   из DX     -порядковый номер байта (от 0 по 65535)
 ;                   из Nomer  -номер файла
Seek:              
  push AX 
  push BX 
  push CX  
  push DX
    mov BX, Nomer  ;номер файла    
    mov CX, 0      ;старшая часть номера байта (младшая часть -в DX)
    mov AL, 0      ;счет байтов -от начала (1 -от текущей позиции, 2 -от конца)
      mov AH,42h
      int 21h
  pop DX
  pop CX
  pop BX
  pop AX
  ret
;──────────────────────────────────────────────────────────────────────────────
end Start
