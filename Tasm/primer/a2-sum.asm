;─────────── СУММА чисел ──────────────────────────────────────────────────────
; Складываются числа из двух однобайтовых переменных.                    AX
; Сумма в двухбайтовую переменную.                                      ┌──┐
; Печатаются числа из переменных (слагаемые и сумма)                    AH AL  
;   Накопителем суммы является AX                                       ├┐┌┤
;   Если сумма не больше байта, то AH=0:   15 + 240 = 255     0F + F0 = 00FF
;   Если сумма    больше байта, то AH=1:  255 + 255 = 510     FF + FF = 01FE  
;                                         десятичные          шестнадцатиричные
; При сложении 8-разрядных чисел девятый разряд суммы во флаге переноса

 .model tiny
 .code
  org 100h
  include _abc.mac     ;библиотека макросов
Start:
  CLS
             ;─── 1 способ: ИМЕНА, предполагаем 1-байтовую сумму
  mov AH,0             ;старший байт суммы=0 (предполагаем сумму однобайтовую)
  mov AL, Y            ;первое слагаемое из ячейки в накопитель
  add AL, Z            ;добавление второго слагаемого  или:  add AL,Y+1
  jnc Metka1           ;если нет переноса, то AH остается нулевым
    mov AH,1           ;если есть перенос, то AH=1
Metka1:                
  mov Sum,AX           ;фиксация суммы в двухбайтовой переменной
  call Result          ;печать результата (чисел из ячеек Y,Z,Sum)

             ;─── 2 способ: АДРЕСА, 
  mov BX,offset Y      ;адрес первой ячейки
  mov AL, [BX]         ;  первое слагаемое
  add AL, [BX+1]       ;  второе слагаемое    или:  inc BX  и  add AL,[BX]
  mov AH,0             ;AH=0
  jnc Metka2           
    inc AH             ;AH=1 (двухбайтовая сумма)
Metka2:                
  mov Sum,AX           ;сумма
  call Result          ;печать результата

             ;─── 3 способ: ИНДЕКСЫ, предполагаем 2-байтовую сумму
  mov BX,0             ;индекс первой ячейки
  mov AL, Y[BX]        ;  первое слагаемое
  add AL, Y[BX]+1      ;  второе слагаемое    или:  inc BX  и  add AL,Y[BX]
  mov AH,1             ;предполагаем 2-байтовую сумму: AH=1
  jc Metka3            ;
    sub AH,AH          ;нет переноса, AH=0
Metka3:                
  mov Sum,AX           ;сумма
  call Result          ;печать результата

             ;─── 4 способ: из двух ячеек в AX (из Y в AL, из Y+1 в AH)
  mov BX,offset Y      ;или индексы: mov BX,0               или имена:
  mov AX,word ptr [BX] ;             mov AX,word ptr Y[BX]    mov AX,word ptr Y
  add AL,AH            ;сумма слагаемых
  mov AH,0             ;старший байт суммы обнулить (AH=0)
  adc AH,0             ;прибавить перенос ( AH=AH+0+перенос) 
  mov Sum,AX           ;сумма
  call Result          ;печать результата

             ;─── 5 способ: из двух ячеек в AX и DX
  mov AH,0
  mov AL, Y            ;первое слагаемое в двухбайтовый регистр AX
  mov DH,0
  mov DL, Z            ;второе слагаемое в двухбайтовый регистр DX
  add AX,DX            ;сложение двухбайтовое
  mov Sum,AX           ;сумма
  call Result          ;печать результата

  PAUSE
  STOP

  Y   db 200           ;первое слагаемое
  Z   db 251           ;второе слагаемое
  Sum dw 0             ;сумма (двухбайтовая переменная)

  include _dec.pp      ;библиотека подпрограмм для печати 10-ных чисел

                   ;--подпрограмма печати результата 
Result:
  mov AL,Y
  call DecAL
  WRITE ' '
  WRITE '+'
  mov AL,Z
  call DecAL
  WRITE ' '
  WRITE '='
  mov AX,Sum
  call DecAX
  WRITELN
  ret




end Start
